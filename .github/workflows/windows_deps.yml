name: windows-dependencies

on:
  workflow_call:
  workflow_dispatch:
        
env:
  EXPORT_FOLDER: bin/windows_x86_64

run-name: 'Compile Windows deps'


# build-dep-x264
# build-dep-x265
# build-dep-aom
# build-dep-svt_av1
# build-dep-vpx
# build-dep-opus
# build-dep-ogg-vorbis
# build-dep-mp3lame


jobs:
  build-dep-x264:
    name: 'x264'
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: |
            git
            subversion
            unzip
            mingw-w64-ucrt-x86_64-binutils
            mingw-w64-ucrt-x86_64-crt-git
            mingw-w64-ucrt-x86_64-gcc
            mingw-w64-ucrt-x86_64-gdb
            mingw-w64-ucrt-x86_64-gdb-multiarch
            mingw-w64-ucrt-x86_64-headers-git
            mingw-w64-ucrt-x86_64-libmangle-git
            mingw-w64-ucrt-x86_64-libwinpthread
            mingw-w64-ucrt-x86_64-pkgconf
            mingw-w64-ucrt-x86_64-tools-git
            mingw-w64-ucrt-x86_64-winpthreads
            mingw-w64-ucrt-x86_64-winstorecompat-git
            mingw-w64-ucrt-x86_64-ninja
            mingw-w64-ucrt-x86_64-make
            mingw-w64-ucrt-x86_64-diffutils
            mingw-w64-ucrt-x86_64-yasm
            mingw-w64-ucrt-x86_64-nasm
            mingw-w64-ucrt-x86_64-python
            mingw-w64-ucrt-x86_64-scons
            mingw-w64-ucrt-x86_64-cmake
            mingw-w64-ucrt-x86_64-autotools

      - name: 'Checkout submodules'
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: 'Compiling'
        working-directory: ./libs
        run: |
          echo $(nproc) | python3 -c "import sys; sys.path.append('.'); from build_utils import download_deps; download_deps.clone_dep_x264()"
          echo $(nproc) | python3 -c "import sys; sys.path.append('.'); from build_utils import build_ffmpeg; build_ffmpeg.build_x264('windows', 'x86_64', 4, {})"

      - name: Uploading x264
        uses: actions/upload-artifact@v4
        with:
          name: dep_win_x264
          path: libs/ffmpeg/bin_windows
          retention-days: 1

  build-dep-x265:
    name: 'x265'
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: |
            git
            subversion
            unzip
            mingw-w64-ucrt-x86_64-binutils
            mingw-w64-ucrt-x86_64-crt-git
            mingw-w64-ucrt-x86_64-gcc
            mingw-w64-ucrt-x86_64-gdb
            mingw-w64-ucrt-x86_64-gdb-multiarch
            mingw-w64-ucrt-x86_64-headers-git
            mingw-w64-ucrt-x86_64-libmangle-git
            mingw-w64-ucrt-x86_64-libwinpthread
            mingw-w64-ucrt-x86_64-pkgconf
            mingw-w64-ucrt-x86_64-tools-git
            mingw-w64-ucrt-x86_64-winpthreads
            mingw-w64-ucrt-x86_64-winstorecompat-git
            mingw-w64-ucrt-x86_64-ninja
            mingw-w64-ucrt-x86_64-make
            mingw-w64-ucrt-x86_64-diffutils
            mingw-w64-ucrt-x86_64-yasm
            mingw-w64-ucrt-x86_64-nasm
            mingw-w64-ucrt-x86_64-python
            mingw-w64-ucrt-x86_64-scons
            mingw-w64-ucrt-x86_64-cmake
            mingw-w64-ucrt-x86_64-autotools

      - name: 'Checkout submodules'
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: 'Compiling'
        working-directory: ./libs
        run: |
          echo $(nproc) | python3 -c "import sys; sys.path.append('.'); from build_utils import download_deps; download_deps.clone_dep_x265()"
          echo $(nproc) | python3 -c "import sys; sys.path.append('.'); from build_utils import build_ffmpeg; build_ffmpeg.build_x265('windows', 'x86_64', 4, {})"

      - name: Uploading x265
        uses: actions/upload-artifact@v4
        with:
          name: dep_win_x265
          path: libs/ffmpeg/bin_windows
          retention-days: 1

  build-dep-aom:
    name: 'aom'
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: |
            git
            subversion
            unzip
            mingw-w64-ucrt-x86_64-binutils
            mingw-w64-ucrt-x86_64-crt-git
            mingw-w64-ucrt-x86_64-gcc
            mingw-w64-ucrt-x86_64-gdb
            mingw-w64-ucrt-x86_64-gdb-multiarch
            mingw-w64-ucrt-x86_64-headers-git
            mingw-w64-ucrt-x86_64-libmangle-git
            mingw-w64-ucrt-x86_64-libwinpthread
            mingw-w64-ucrt-x86_64-pkgconf
            mingw-w64-ucrt-x86_64-tools-git
            mingw-w64-ucrt-x86_64-winpthreads
            mingw-w64-ucrt-x86_64-winstorecompat-git
            mingw-w64-ucrt-x86_64-ninja
            mingw-w64-ucrt-x86_64-make
            mingw-w64-ucrt-x86_64-diffutils
            mingw-w64-ucrt-x86_64-yasm
            mingw-w64-ucrt-x86_64-nasm
            mingw-w64-ucrt-x86_64-python
            mingw-w64-ucrt-x86_64-scons
            mingw-w64-ucrt-x86_64-cmake
            mingw-w64-ucrt-x86_64-autotools

      - name: 'Checkout submodules'
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: 'Compiling'
        working-directory: ./libs
        run: |
          echo $(nproc) | python3 -c "import sys; sys.path.append('.'); from build_utils import download_deps; download_deps.clone_dep_aom()"
          echo $(nproc) | python3 -c "import sys; sys.path.append('.'); from build_utils import build_ffmpeg; build_ffmpeg.build_aom('windows', 'x86_64', 4, {})"

      - name: Uploading aom
        uses: actions/upload-artifact@v4
        with:
          name: dep_win_aom
          path: libs/ffmpeg/bin_windows
          retention-days: 1

  build-dep-svt_av1:
    name: 'svt_av1'
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: |
            git
            subversion
            unzip
            mingw-w64-ucrt-x86_64-binutils
            mingw-w64-ucrt-x86_64-crt-git
            mingw-w64-ucrt-x86_64-gcc
            mingw-w64-ucrt-x86_64-gdb
            mingw-w64-ucrt-x86_64-gdb-multiarch
            mingw-w64-ucrt-x86_64-headers-git
            mingw-w64-ucrt-x86_64-libmangle-git
            mingw-w64-ucrt-x86_64-libwinpthread
            mingw-w64-ucrt-x86_64-pkgconf
            mingw-w64-ucrt-x86_64-tools-git
            mingw-w64-ucrt-x86_64-winpthreads
            mingw-w64-ucrt-x86_64-winstorecompat-git
            mingw-w64-ucrt-x86_64-ninja
            mingw-w64-ucrt-x86_64-make
            mingw-w64-ucrt-x86_64-diffutils
            mingw-w64-ucrt-x86_64-yasm
            mingw-w64-ucrt-x86_64-nasm
            mingw-w64-ucrt-x86_64-python
            mingw-w64-ucrt-x86_64-scons
            mingw-w64-ucrt-x86_64-cmake
            mingw-w64-ucrt-x86_64-autotools

      - name: 'Checkout submodules'
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: 'Compiling'
        working-directory: ./libs
        run: |
          echo $(nproc) | python3 -c "import sys; sys.path.append('.'); from build_utils import download_deps; download_deps.clone_dep_svt_av1()"
          echo $(nproc) | python3 -c "import sys; sys.path.append('.'); from build_utils import build_ffmpeg; build_ffmpeg.build_svt_av1('windows', 'x86_64', 4, {})"

      - name: Uploading svt_av1
        uses: actions/upload-artifact@v4
        with:
          name: dep_win_svt_av1
          path: libs/ffmpeg/bin_windows
          retention-days: 1

  build-dep-vpx:
    name: 'vpx'
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: |
            git
            subversion
            unzip
            mingw-w64-ucrt-x86_64-binutils
            mingw-w64-ucrt-x86_64-crt-git
            mingw-w64-ucrt-x86_64-gcc
            mingw-w64-ucrt-x86_64-gdb
            mingw-w64-ucrt-x86_64-gdb-multiarch
            mingw-w64-ucrt-x86_64-headers-git
            mingw-w64-ucrt-x86_64-libmangle-git
            mingw-w64-ucrt-x86_64-libwinpthread
            mingw-w64-ucrt-x86_64-pkgconf
            mingw-w64-ucrt-x86_64-tools-git
            mingw-w64-ucrt-x86_64-winpthreads
            mingw-w64-ucrt-x86_64-winstorecompat-git
            mingw-w64-ucrt-x86_64-ninja
            mingw-w64-ucrt-x86_64-make
            mingw-w64-ucrt-x86_64-diffutils
            mingw-w64-ucrt-x86_64-yasm
            mingw-w64-ucrt-x86_64-nasm
            mingw-w64-ucrt-x86_64-python
            mingw-w64-ucrt-x86_64-scons
            mingw-w64-ucrt-x86_64-cmake
            mingw-w64-ucrt-x86_64-autotools

      - name: 'Checkout submodules'
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: 'Compiling'
        working-directory: ./libs
        run: |
          echo $(nproc) | python3 -c "import sys; sys.path.append('.'); from build_utils import download_deps; download_deps.clone_dep_vpx()"
          echo $(nproc) | python3 -c "import sys; sys.path.append('.'); from build_utils import build_ffmpeg; build_ffmpeg.build_vpx('windows', 'x86_64', 4, {})"

      - name: Uploading vpx
        uses: actions/upload-artifact@v4
        with:
          name: dep_win_vpx
          path: libs/ffmpeg/bin_windows
          retention-days: 1
          
  build-dep-opus:
    name: 'opus'
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: |
            git
            subversion
            unzip
            mingw-w64-ucrt-x86_64-binutils
            mingw-w64-ucrt-x86_64-crt-git
            mingw-w64-ucrt-x86_64-gcc
            mingw-w64-ucrt-x86_64-gdb
            mingw-w64-ucrt-x86_64-gdb-multiarch
            mingw-w64-ucrt-x86_64-headers-git
            mingw-w64-ucrt-x86_64-libmangle-git
            mingw-w64-ucrt-x86_64-libwinpthread
            mingw-w64-ucrt-x86_64-pkgconf
            mingw-w64-ucrt-x86_64-tools-git
            mingw-w64-ucrt-x86_64-winpthreads
            mingw-w64-ucrt-x86_64-winstorecompat-git
            mingw-w64-ucrt-x86_64-ninja
            mingw-w64-ucrt-x86_64-make
            mingw-w64-ucrt-x86_64-diffutils
            mingw-w64-ucrt-x86_64-yasm
            mingw-w64-ucrt-x86_64-nasm
            mingw-w64-ucrt-x86_64-python
            mingw-w64-ucrt-x86_64-scons
            mingw-w64-ucrt-x86_64-cmake
            mingw-w64-ucrt-x86_64-autotools

      - name: 'Checkout submodules'
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: 'Compiling'
        working-directory: ./libs
        run: |
          echo $(nproc) | python3 -c "import sys; sys.path.append('.'); from build_utils import download_deps; download_deps.clone_dep_opus()"
          echo $(nproc) | python3 -c "import sys; sys.path.append('.'); from build_utils import build_ffmpeg; build_ffmpeg.build_opus('windows', 'x86_64', 4, {})"

      - name: Uploading opus
        uses: actions/upload-artifact@v4
        with:
          name: dep_win_opus
          path: libs/ffmpeg/bin_windows
          retention-days: 1
          
  build-dep-ogg-vorbis:
    name: 'ogg + vorbis'
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: |
            git
            subversion
            unzip
            mingw-w64-ucrt-x86_64-binutils
            mingw-w64-ucrt-x86_64-crt-git
            mingw-w64-ucrt-x86_64-gcc
            mingw-w64-ucrt-x86_64-gdb
            mingw-w64-ucrt-x86_64-gdb-multiarch
            mingw-w64-ucrt-x86_64-headers-git
            mingw-w64-ucrt-x86_64-libmangle-git
            mingw-w64-ucrt-x86_64-libwinpthread
            mingw-w64-ucrt-x86_64-pkgconf
            mingw-w64-ucrt-x86_64-tools-git
            mingw-w64-ucrt-x86_64-winpthreads
            mingw-w64-ucrt-x86_64-winstorecompat-git
            mingw-w64-ucrt-x86_64-ninja
            mingw-w64-ucrt-x86_64-make
            mingw-w64-ucrt-x86_64-diffutils
            mingw-w64-ucrt-x86_64-yasm
            mingw-w64-ucrt-x86_64-nasm
            mingw-w64-ucrt-x86_64-python
            mingw-w64-ucrt-x86_64-scons
            mingw-w64-ucrt-x86_64-cmake
            mingw-w64-ucrt-x86_64-autotools

      - name: 'Checkout submodules'
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: 'Compiling ogg'
        working-directory: ./libs
        run: |
          echo $(nproc) | python3 -c "import sys; sys.path.append('.'); from build_utils import download_deps; download_deps.clone_dep_ogg()"
          echo $(nproc) | python3 -c "import sys; sys.path.append('.'); from build_utils import build_ffmpeg; build_ffmpeg.build_ogg('windows', 'x86_64', 4, {})"

      - name: 'Compiling vorbis'
        working-directory: ./libs
        run: |
          echo $(nproc) | python3 -c "import sys; sys.path.append('.'); from build_utils import download_deps; download_deps.clone_dep_vorbis()"
          echo $(nproc) | python3 -c "import sys; sys.path.append('.'); from build_utils import build_ffmpeg; build_ffmpeg.build_vorbis('windows', 'x86_64', 4, {})"

      - name: Uploading ogg + vorbis
        uses: actions/upload-artifact@v4
        with:
          name: dep_win_ogg_vorbis
          path: libs/ffmpeg/bin_windows
          retention-days: 1

  build-dep-mp3lame:
    name: 'mp3-lame'
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: |
            git
            subversion
            unzip
            mingw-w64-ucrt-x86_64-binutils
            mingw-w64-ucrt-x86_64-crt-git
            mingw-w64-ucrt-x86_64-gcc
            mingw-w64-ucrt-x86_64-gdb
            mingw-w64-ucrt-x86_64-gdb-multiarch
            mingw-w64-ucrt-x86_64-headers-git
            mingw-w64-ucrt-x86_64-libmangle-git
            mingw-w64-ucrt-x86_64-libwinpthread
            mingw-w64-ucrt-x86_64-pkgconf
            mingw-w64-ucrt-x86_64-tools-git
            mingw-w64-ucrt-x86_64-winpthreads
            mingw-w64-ucrt-x86_64-winstorecompat-git
            mingw-w64-ucrt-x86_64-ninja
            mingw-w64-ucrt-x86_64-make
            mingw-w64-ucrt-x86_64-diffutils
            mingw-w64-ucrt-x86_64-yasm
            mingw-w64-ucrt-x86_64-nasm
            mingw-w64-ucrt-x86_64-python
            mingw-w64-ucrt-x86_64-scons
            mingw-w64-ucrt-x86_64-cmake
            mingw-w64-ucrt-x86_64-autotools

      - name: 'Checkout submodules'
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: 'Compiling'
        working-directory: ./libs
        run: |
          echo $(nproc) | python3 -c "import sys; sys.path.append('.'); from build_utils import download_deps; download_deps.clone_dep_mp3lame()"
          echo $(nproc) | python3 -c "import sys; sys.path.append('.'); from build_utils import build_ffmpeg; build_ffmpeg.build_mp3lame('windows', 'x86_64', 4, {})"

      - name: Uploading mp3lame
        uses: actions/upload-artifact@v4
        with:
          name: dep_win_mp3lame
          path: libs/ffmpeg/bin_windows
          retention-days: 1

